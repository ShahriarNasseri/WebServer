name: Build
on:
  pull_request:
    branches: ["master"]
  push:
  workflow_dispatch:
jobs:

  build_windows_2:
    runs-on: windows-latest
    steps:
      - name: Clone source
        run: git clone --recursive https://github.com/uNetworking/uWebSockets.git
      - name: Install libuv
        run: |
          vcpkg install libuv:x64-windows
          cp C:\vcpkg\installed\x64-windows\bin\uv.dll uWebSockets\uv.dll
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Build examples
        run: |
          cd uWebSockets
          $Env:WITH_ZLIB='0'; $ENV:WITH_LTO='0'; $Env:CC='clang';
          $ENV:CFLAGS='-I C:\vcpkg\installed\x64-windows\include';
          $ENV:LDFLAGS='-L C:\vcpkg\installed\x64-windows\lib';
          $ENV:CXX='clang++'; $ENV:EXEC_SUFFIX='.exe'; $ENV:WITH_LIBUV='1'; # nmake
          ls
      # - name: Run unit tests
      #   run: $Env:CC='clang'; $Env:CXX='clang++'; make -C uWebSockets/tests
      - name: Build lib 0
        run: |
          cd uWebSockets
          clang++ -march=native -O3 -std=c++20 -Isrc -IuSockets/src -DUWS_NO_ZLIB capi/libuwebsockets.cpp -L C:\vcpkg\installed\x64-windows\lib uSockets/*.o -luv --shared -o libuwebsockets.dll
      - name: deps
        run: dumpbin /dependents uWebSockets/libuwebsockets.dll
      - name: Build lib
        run: |
          cd uWebSockets
          $Env:CC='clang'; $Env:CXX='clang++'; clang++ -std=c++20 -lz -luv -IuSockets/src capi/libuwebsockets.cpp --shared -o libuwebsockets.dll
      - name: Run smoke test
        run: |
          cd uWebSockets
          iwr https://deno.land/x/install/install.ps1 -useb | iex
          Start-Process -NoNewWindow .\Crc32
          sleep 1
          deno run --allow-net tests\smoke.mjs
          Stop-Process -Name Crc32

  build-uwebsockets-mac-arm: 
    name: Build uWebSockets (macOS ARM)
    runs-on: macos-latest
    
    steps:

    - name: Get zlib repository
      uses: actions/checkout@v3.6.0
      with:
        repository: madler/zlib
        path: zlib

    - name: Build zlib
      run: |
        cd zlib
        mkdir build
        cd build
        cmake .. -DCMAKE_INSTALL_PREFIX=install -DCMAKE_OSX_ARCHITECTURES=arm64
        cmake --build .
        cmake --install .

    - name: Get libuv repository
      uses: actions/checkout@v3.6.0
      with:
        repository: libuv/libuv
        path: libuv

    - name: Build libuv
      run: |
        cd libuv
        mkdir build
        cd build
        cmake .. -DLIBUV_BUILD_TESTS=OFF -DLIBUV_BUILD_SHARED=OFF -DCMAKE_INSTALL_PREFIX=install -DCMAKE_OSX_ARCHITECTURES=arm64
        cmake --build .
        cmake --install .

    - name: Get repository
      uses: actions/checkout@v3.6.0
      with:
        path: WebServer

    - name: Build uWebSockets
      run: |
        cd WebServer
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DSYSTEM_ID=MacOSX-ARM64 -DCMAKE_OSX_ARCHITECTURES=arm64 -DZLIB_ROOT=../../zlib/build/install/ -DLIBUV_ROOT=../../libuv/build/install/
        cmake --build .
        cmake --install .

    - uses: actions/upload-artifact@v3
      with:
        name: build-macos-arm
        path: WebServer/build/WebServer
        if-no-files-found: error


  build-uwebsockets-mac: 
    name: Build uWebSockets (macOS)
    runs-on: macos-latest
    
    steps:

    - name: Get zlib repository
      uses: actions/checkout@v3.6.0
      with:
        repository: madler/zlib
        path: zlib

    - name: Build zlib
      run: |
        cd zlib
        mkdir build
        cd build
        cmake .. -DCMAKE_INSTALL_PREFIX=install -DCMAKE_OSX_ARCHITECTURES=x86_64
        cmake --build .
        cmake --install .

    - name: Get libuv repository
      uses: actions/checkout@v3.6.0
      with:
        repository: libuv/libuv
        path: libuv

    - name: Build libuv
      run: |
        cd libuv
        mkdir build
        cd build
        cmake .. -DLIBUV_BUILD_TESTS=OFF -DLIBUV_BUILD_SHARED=OFF -DCMAKE_INSTALL_PREFIX=install -DCMAKE_OSX_ARCHITECTURES=x86_64
        cmake --build .
        cmake --install .

    - name: Get repository
      uses: actions/checkout@v3.6.0
      with:
        path: WebServer

    - name: Build uWebSockets
      run: |
        cd WebServer
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DSYSTEM_ID=MacOSX-x86-64 -DCMAKE_OSX_ARCHITECTURES=x86_64 -DZLIB_ROOT=../../zlib/build/install/ -DLIBUV_ROOT=../../libuv/build/install/
        cmake --build .
        cmake --install .

    - uses: actions/upload-artifact@v3
      with:
        name: build-macos
        path: WebServer/build/WebServer
        if-no-files-found: error


  build-uwebsockets-linux: 
    name: Build uWebSockets (Linux)
    runs-on: ubuntu-latest
    
    steps:

    - name: Get zlib repository
      uses: actions/checkout@v3.6.0
      with:
        repository: madler/zlib
        path: zlib

    - name: Build zlib
      run: |
        cd zlib
        mkdir build
        cd build
        cmake .. -DCMAKE_INSTALL_PREFIX=install -DCMAKE_POSITION_INDEPENDENT_CODE=ON
        cmake --build .
        cmake --install .

    - name: Get libuv repository
      uses: actions/checkout@v3.6.0
      with:
        repository: libuv/libuv
        path: libuv

    - name: Build libuv
      run: |
        cd libuv
        mkdir build
        cd build
        cmake .. -DLIBUV_BUILD_TESTS=OFF -DLIBUV_BUILD_SHARED=OFF -DCMAKE_INSTALL_PREFIX=install -DCMAKE_POSITION_INDEPENDENT_CODE=ON
        cmake --build .
        cmake --install .

    - name: Get repository
      uses: actions/checkout@v3.6.0
      with:
        path: WebServer

    - name: Build uWebSockets
      run: |
        cd WebServer
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DSYSTEM_ID=Linux-x86-64 -DZLIB_ROOT=../../zlib/build/install/ -DLIBUV_ROOT=../../libuv/build/install/
        cmake --build .
        cmake --install .

    - uses: actions/upload-artifact@v3
      with:
        name: build-linux
        path: WebServer/build/WebServer
        if-no-files-found: error


  build-uwebsockets-windows: 
    name: Build uWebSockets (Windows)
    runs-on: windows-latest
    
    steps:

    - name: Build dependencies
      run: vcpkg install usockets uwebsockets --triplet=x64-windows-static

    - uses: ilammy/msvc-dev-cmd@v1
    - uses: ilammy/setup-nasm@v1.2.1
      
    - name: Get uWebSockets repository
      uses: actions/checkout@v3.6.0
      with:
        repository: uNetworking/uWebSockets
        path: uWebSockets

    - name: Build libuwebsockets (CAPI)
      run: |
        cd uWebSockets/capi
        $Env:WITH_ZLIB='0'; $ENV:WITH_LTO='0'; $Env:CC='clang';
        $ENV:CFLAGS='-I C:\vcpkg\installed\x64-windows\include';
        $ENV:LDFLAGS='-L C:\vcpkg\installed\x64-windows\lib';
        $ENV:CXX='clang++'; $ENV:EXEC_SUFFIX='.exe'; $ENV:WITH_LIBUV='1';
        clang++ libuwebsockets.cpp -lusockets --shared -o libuwebsockets.dll

    - name: Get libuv repository
      uses: actions/checkout@v3.6.0
      with:
        repository: libuv/libuv
        path: libuv

    - name: Build libuv
      run: |
        cd libuv
        mkdir build
        cd build
        cmake .. -G Ninja -DLIBUV_BUILD_TESTS=OFF -DLIBUV_BUILD_SHARED=OFF -DCMAKE_INSTALL_PREFIX=install
        cmake --build .
        cmake --install .

    - name: Get repository
      uses: actions/checkout@v3.6.0
      with:
        path: WebServer

    - name: Build uWebSockets
      run: |          
        cd WebServer
        mkdir build
        cd build
        # -G Ninja
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DSYSTEM_ID=Windows-x86-64 -DZLIB_ROOT="../../zlib/build/install/" -DLIBUV_ROOT="../../libuv/build/install/" ..
        cmake --build .
        cmake --install .

    - uses: actions/upload-artifact@v3
      with:
        name: build-windows
        path: WebServer/build/WebServer
        if-no-files-found: error


  # build-uwebsockets-mac: 
  #   name: Build uWebSockets (macOS)
  #   runs-on: macos-latest
    
  #   steps:

  #   - uses: actions/checkout@v3.6.0
  #     with:
  #       repository: uNetworking/uWebSockets
  #       path: uWebSockets
  #       submodules: true

  #   - name: Install dependencies
  #     run: |
  #       brew install libuv

  #   - name: Make
  #     run: |
  #       # Unclear if this first make is needed.
  #       cd uWebSockets
  #       make capi
  #       cd capi
  #       make

  #   - name: Build dynamic library
  #     run: |
  #       cd uWebSockets/capi
  #       clang -O3 -flto *.o -lz -luv -lssl -lcrypto -lstdc++ ../uSockets/uSockets.a --shared -o libuwebsockets.dylib

  #   - uses: actions/upload-artifact@v3
  #     with:
  #       name: uwebsockets-build-macos
  #       path: uWebSockets/capi/libuwebsockets.dylib
  #       if-no-files-found: error


  # build-uwebsockets-mac-arm: 
  #   name: Build uWebSockets (macOS ARM)
  #   runs-on: self-hosted
    
  #   steps:

  #   - uses: actions/checkout@v3.6.0
  #     with:
  #       repository: uNetworking/uWebSockets
  #       path: uWebSockets
  #       submodules: true

  #   - name: Install dependencies
  #     run: |
  #       brew install libuv
        
  #   - name: Make
  #     run: |
  #       export CPATH=/opt/homebrew/include 
  #       export LIBRARY_PATH=/opt/homebrew/lib
        
  #       # Unclear if this first make is needed.
  #       cd uWebSockets
  #       make capi
  #       cd capi
  #       make

  #   - name: Build dynamic library
  #     run: |
  #       export CPATH=/opt/homebrew/include 
  #       export LIBRARY_PATH=/opt/homebrew/lib
        
  #       cd uWebSockets/capi
  #       clang -O3 -flto *.o -lz -luv -lssl -lcrypto -lstdc++ ../uSockets/uSockets.a --shared -o libuwebsockets.dylib

  #   - uses: actions/upload-artifact@v3
  #     with:
  #       name: uwebsockets-build-macos-arm
  #       path: uWebSockets/capi/libuwebsockets.dylib
  #       if-no-files-found: error


  # build-uwebsockets-linux: 
  #   name: Build uWebSockets (Linux)
  #   runs-on: ubuntu-latest
    
  #   steps:

  #   - uses: actions/checkout@v3.6.0
  #     with:
  #       repository: uNetworking/uWebSockets
  #       path: uWebSockets
  #       submodules: true

  #   - name: Install dependencies
  #     run: |
  #       sudo apt-get install libuv1-dev

  #   - name: Make
  #     run: |
  #       # Unclear if this first make is needed.
  #       cd uWebSockets
  #       make capi
  #       cd capi
  #       make

  #   - name: Build dynamic library
  #     run: |
  #       cd uWebSockets/capi
  #       ls
  #       gcc -O3 -flto *.o -lz -luv -lssl -lcrypto -lstdc++ ../uSockets/uSockets.a --shared -o libuwebsockets.so
  #       ls

  #   - uses: actions/upload-artifact@v3
  #     with:
  #       name: uwebsockets-build-linux
  #       path: uWebSockets/capi/libuwebsockets.so
  #       if-no-files-found: error

  # # build-uwebsockets-windows: 
  # #   name: Build uWebSockets (Windows)
  # #   runs-on: windows-latest
    
  # #   steps:

  # #   # - uses: actions/checkout@v3.6.0
  # #   #   with:
  # #   #     repository: uNetworking/uWebSockets
  # #   #     path: uWebSockets
  # #   #     submodules: true

  # #   # - name: Install libuv
  # #   #   run: |
  # #   #     vcpkg install libuv:x64-windows
  # #   #     cp C:\vcpkg\installed\x64-windows\bin\uv.dll uWebSockets\uv.dll

  # #   # - uses: ilammy/msvc-dev-cmd@v1
    
  # #   # - name: Make
  # #   #   run: |
  # #   #     cd uWebSockets
  # #   #     $Env:WITH_ZLIB='0'; $ENV:WITH_LTO='0'; $Env:CC='clang';
  # #   #     $ENV:CFLAGS='-I C:\vcpkg\installed\x64-windows\include';
  # #   #     $ENV:LDFLAGS='-L C:\vcpkg\installed\x64-windows\lib';
  # #   #     $ENV:CXX='clang++'; $ENV:EXEC_SUFFIX='.exe'; $ENV:WITH_LIBUV='1'
  # #   #     nmake
  # #   #     ls
  # #   #     ls capi
  # #   #     nmake capi
  # #   #     ls
  # #   #     cd capi
  # #   #     ls
  # #   #     nmake

  # #   # - name: Build dynamic library
  # #   #   run: |
  # #   #     cd uWebSockets/capi
  # #   #     ls
  # #   #     gcc -O3 -flto -I ../src -I ../uSockets/src *.o -lz -luv -lssl -lcrypto -lstdc++ ../uSockets/uSockets.a --shared -o libuwebsockets.dll
  # #   #     ls

  # #   - name: Install uWebSockets
  # #     run: |
  # #       vcpkg install uwebsockets
  # #       ls
  # #       ls C:\vcpkg\installed\x64-windows\

  # #   - uses: actions/upload-artifact@v3
  # #     with:
  # #       name: uwebsockets-build-windows
  # #       path: uWebSockets/capi/libuwebsockets.dll
  # #       if-no-files-found: error

  # final-assembly:
  #   name: Final paclet assembly

  #   needs:
  #     - build-uwebsockets-mac
  #     - build-uwebsockets-mac-arm
  #     - build-uwebsockets-linux

  #   runs-on: ubuntu-latest

  #   steps:
    
  #     - uses: actions/checkout@v3
  #       with:
  #         path: deployed/WebServer
  #         sparse-checkout: |
  #           Documentation
  #           Kernel
  #           PacletInfo.wl
  #           ResourceDefinition.nb

  #     - name: Download macOS uWebSockets builds
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: uwebsockets-build-macos
  #         path: deployed/WebServer/LibraryResources/MacOSX-x86-64/

  #     - name: Download macOS (ARM) uWebSockets builds
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: uwebsockets-build-macos-arm
  #         path: deployed/WebServer/LibraryResources/MacOSX-ARM64/

  #     - name: Download Linux uWebSockets builds
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: uwebsockets-build-linux
  #         path: deployed/WebServer/LibraryResources/Linux-x86-64/

  #     - name: Upload final paclet
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: WebServer
  #         path: deployed/
  #         if-no-files-found: error
    
